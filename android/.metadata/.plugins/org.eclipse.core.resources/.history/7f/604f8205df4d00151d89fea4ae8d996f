package com.hoohaa.hoohaalauncher;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.Serializable;

import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Bitmap.Config;
import android.graphics.drawable.Drawable;

public class Pack implements Serializable{
	private static final long serialVersionUID = -8943614059049888535L;
	
	transient Drawable icon;
	String name, label, packageName, iconLocation;
	int x, y;
	boolean landscape;
	
	public Pack(Drawable i, String n, String l, String pn){
		icon = i;
		name = n;
		label = l;
		packageName = pn;
	}
	
	public void cacheIcon(){
		if(iconLocation == null){
			new File(MainActivity.activity.getApplicationInfo().dataDir
					+ "/cachedApps/").mkdir();
			
			if(icon != null){
				iconLocation = MainActivity.activity.getApplicationInfo().dataDir
						+ "/cachedApps/" + packageName + name;
				FileOutputStream fos = null;
				try{
					fos = new FileOutputStream(iconLocation);
				}catch(FileNotFoundException e){
					e.printStackTrace();
				}
				
				if(fos != null){
					Tools.drawableToBitmap(icon).compress(
							Bitmap.CompressFormat.PNG, 
							100, fos);
					try{
						fos.flush();
						fos.close();
					}catch(IOException e){
						e.printStackTrace();
					}
				}else
					iconLocation = null;
			}
		}
	}
	
	public Bitmap getCachedIcon(){
		BitmapFactory.Options options = new BitmapFactory.Options();
		options.inJustDecodeBounds = false;
		options.inPreferredConfig = Config.ARGB_8888;
		options.inDither = true;
		
		if(iconLocation != null){
			File cachedIcon = new File(iconLocation);
			if(cachedIcon.exists()){
				return BitmapFactory.decodeFile(cachedIcon.getAbsolutePath(), options);
			}
		}
		return null;
	}
	
	public void deleteIcon(){
		if(iconLocation != null)
			new File(iconLocation).delete();
	}
}