package com.hoohaa.hoohaalauncher;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.Serializable;
import java.util.ArrayList;

import android.content.Context;
import android.content.res.Configuration;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Bitmap.Config;
import android.graphics.drawable.Drawable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnLongClickListener;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.RelativeLayout.LayoutParams;

public class Pack implements Serializable{
	private static final long serialVersionUID = -8943614059049888535L;
	
	transient Drawable icon;
	String name, label, packageName, iconLocation;
	int x, y;
	boolean landscape;
	
	public Pack(Drawable i, String n, String l, String pn){
		icon = i;
		name = n;
		label = l;
		packageName = pn;
	}
	
	public void cacheIcon(){
		if(iconLocation == null){
			new File(MainActivity.activity.getApplicationInfo().dataDir
					+ "/cachedApps/").mkdir();
			
			if(icon != null){
				iconLocation = MainActivity.activity.getApplicationInfo().dataDir
						+ "/cachedApps/" + packageName + name;
				FileOutputStream fos = null;
				try{
					fos = new FileOutputStream(iconLocation);
				}catch(FileNotFoundException e){
					e.printStackTrace();
				}
				
				if(fos != null){
					Tools.drawableToBitmap(icon).compress(
							Bitmap.CompressFormat.PNG, 
							100, fos);
					try{
						fos.flush();
						fos.close();
					}catch(IOException e){
						e.printStackTrace();
					}
				}else
					iconLocation = null;
			}
		}
	}
	
	public void addToHome(Context mContext){
		LayoutParams lp = new LayoutParams(
				LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
		lp.leftMargin = x;
		lp.topMargin = y;
		
		LayoutInflater li = (LayoutInflater) mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
		LinearLayout ll = (LinearLayout) li.inflate(R.layout.drawer_item, null);
		((ImageView)ll.findViewById(R.id.item_icon)).setImageDrawable(icon);
		((TextView)ll.findViewById(R.id.item_label)).setText(label);
		
		ll.setOnLongClickListener(new OnLongClickListener() {
			
			@Override
			public boolean onLongClick(View v) {
				// TODO Auto-generated method stub
				v.setOnTouchListener(new AppTouchListener());
				return false;
			}
		});
		
		//delete this line v
		ll.setOnClickListener(new AppClickListener(mContext));
			
		ll.setTag(packsForAdapter[position]);
		
		homeView.addView(ll, lp);
	}
	
	public Bitmap getCachedIcon(){
		BitmapFactory.Options options = new BitmapFactory.Options();
		options.inJustDecodeBounds = false;
		options.inPreferredConfig = Config.ARGB_8888;
		options.inDither = true;
		
		if(iconLocation != null){
			File cachedIcon = new File(iconLocation);
			if(cachedIcon.exists()){
				return BitmapFactory.decodeFile(cachedIcon.getAbsolutePath(), options);
			}
		}
		return null;
	}
	
	public void deleteIcon(){
		if(iconLocation != null)
			new File(iconLocation).delete();
	}
}