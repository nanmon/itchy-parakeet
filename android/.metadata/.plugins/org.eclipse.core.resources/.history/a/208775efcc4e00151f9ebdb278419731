package com.hoohaa.hoohaalauncher;

import java.util.ArrayList;

import android.content.res.Configuration;
import android.graphics.Color;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnTouchListener;
import android.widget.GridLayout;
import android.widget.GridLayout.LayoutParams;
import android.widget.ImageView;

public class AppTouchListener implements OnTouchListener {
	
	int leftMargin;
	int topMargin;
	boolean hasMoved;
	
	@Override
	public boolean onTouch(View v, MotionEvent event) {
		switch(event.getAction()){
		case MotionEvent.ACTION_MOVE:
			//reuse v.layoutParams
			hasMoved = true;
			LayoutParams lp = //new LayoutParams(v.getWidth(), v.getHeight());
				(LayoutParams)v.getLayoutParams();
			leftMargin = (int)event.getRawX() - v.getWidth()/2;
			topMargin = (int)event.getRawY() - v.getHeight()/2;
			
			if(leftMargin+v.getWidth() >= v.getRootView().getWidth()){
				leftMargin = v.getRootView().getWidth() - v.getWidth() - 1;
			}else if(leftMargin < 0)
				leftMargin = 0;
			
			if(topMargin+v.getHeight() >= ((View) v.getParent()).getHeight())
				topMargin = ((View) v.getParent()).getHeight() - v.getHeight() - 1;
			else if(topMargin < 0){
				topMargin = 0;
			}
				
			if(topMargin < v.getHeight()/2){
				((ImageView)v.findViewById(R.id.item_icon)).setColorFilter(Color.RED);
			}else
				((ImageView)v.findViewById(R.id.item_icon)).setColorFilter(Color.TRANSPARENT);
			
			lp.leftMargin = leftMargin;
			lp.topMargin = topMargin;
			v.setLayoutParams(lp);
			break;
		case MotionEvent.ACTION_UP:
			v.setOnTouchListener(null);
			((ImageView)v.findViewById(R.id.item_icon)).setColorFilter(Color.TRANSPARENT);
			if(topMargin < v.getHeight()/2){
				((GridLayout)v.getParent()).removeView(v);
				/*Pack pack = (Pack)v.getTag();
				AppSerializableData serialData = SerializationTools.loadSerializedData();
				if(serialData == null || serialData.apps == null)
					return true;
				for(int i=serialData.apps.size()-1; i>=0; --i)
					if(serialData.apps.get(i).x == pack.x
							&& serialData.apps.get(i).y == pack.y){
						serialData.apps.remove(i);
						break;
					}
				
				SerializationTools.serializeData(serialData);*/
			}else{
				/*AppSerializableData serialData = SerializationTools.loadSerializedData();
				if(serialData == null)
					serialData = new AppSerializableData();
				if(serialData.apps == null)
					serialData.apps = new ArrayList<>();
				
				Pack pack = (Pack)v.getTag();
				
				pack.landscape =
				MainActivity.activity.getResources().getConfiguration().orientation
						== Configuration.ORIENTATION_LANDSCAPE;
				
				pack.cacheIcon();
				for(int i=0; i<serialData.apps.size(); ++i){
					if(serialData.apps.get(i).x == pack.x
							&& serialData.apps.get(i).y == pack.y){
						pack.x = (int)v.getX();
						pack.y = (int)v.getY();
						serialData.apps.get(i).x = pack.x;
						serialData.apps.get(i).y = pack.y;
						break;
					}
				}
				//serialData.apps.add(pack);
				
				SerializationTools.serializeData(serialData);*/
			}
			break;
			
			
			/*if(doClick){
				Intent launchIntent = new Intent(Intent.ACTION_MAIN);
				launchIntent.addCategory(Intent.CATEGORY_LAUNCHER);
				int p = (int)v.getTag();
				ComponentName cp = new ComponentName(
						packs[p].packageName, 
						packs[p].name);
				launchIntent.setComponent(cp);
				mContext.startActivity(launchIntent);
			}*/
		}
		return true;
	}

}
