package com.hoohaainc.framework.implementation;

import java.util.ArrayList;
import java.util.List;

import com.hoohaainc.framework.Input.TouchEvent;

import android.view.MotionEvent;
import android.view.View;

public class MultiTouchHandler2 implements TouchHandler {
	
	private final int MAX_POINTERS = 10;
	private int justTouched;
	
	private float scaleX, scaleY;
	private List<TouchEvent> events = new ArrayList<>(MAX_POINTERS);
	
	public MultiTouchHandler2(View view, float scaleX, float scaleY){
        /*Pool.PoolObjectFactory<Input.TouchEvent> factory =
                new Pool.PoolObjectFactory<Input.TouchEvent>() {
                    @Override
                    public Input.TouchEvent createObject() {
                        return new Input.TouchEvent();
                    }
                };
        touchEventPool = new Pool<>(factory, 100);*/
        view.setOnTouchListener(this);

        this.scaleX = scaleX;
        this.scaleY = scaleY;
    }

	@Override
	public boolean onTouch(View v, MotionEvent event) {
		TouchEvent touchEvent;
		for(int i=0; i<event.getPointerCount(); ++i){
			touchEvent = i >= events.size() ? new TouchEvent() : events.get(i);
			touchEvent.x = (int)(event.getX(i)*scaleX);
			touchEvent.y = (int)(event.getY(i)*scaleY);
			touchEvent.pointer = i;
			switch(event.getActionMasked()){
			case MotionEvent.ACTION_DOWN:
			case MotionEvent.ACTION_POINTER_DOWN:
				touchEvent.type = TouchEvent.TOUCH_DOWN;
				justTouched = 1 << i;
				break;
			case MotionEvent.ACTION_UP:
			case MotionEvent.ACTION_POINTER_UP:
			case MotionEvent.ACTION_CANCEL:
				touchEvent.type = TouchEvent.TOUCH_UP;
				justTouched =  1 << i;
				break;
			case MotionEvent.ACTION_MOVE:
				touchEvent.type = TouchEvent.TOUCH_DRAGGED;
				break;
			default:
				return false;
			}
			if(i >= events.size())
				events.add(touchEvent);
			else events.set(i, touchEvent);
		}
		return true;
	}

	@Override
	public boolean isTouchDown(int pointer) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public int getTouchX(int pointer) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public int getTouchY(int pointer) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public List<TouchEvent> getTouchEvents() {
		for(int i=events.size()-1; i>=0; --i){
			if(events.get(i).type == TouchEvent.TOUCH_DOWN){
				if(((1 << i) & justTouched) == 0)
					events.get(i).type = TouchEvent.TOUCH_HOLD;
				else justTouched = justTouched ^ (1 << i);
			}else if(events.get(i).type == TouchEvent.TOUCH_UP){
				if(((1 << i) & justTouched) == 0){
					events.remove(i);
					int end = (justTouched & ((1<<(i))-1));
					int start = (justTouched ^ ((1<<(i))-1));
					justTouched = (start>>1)+end;
				}else justTouched = justTouched ^ (1 << i);
			}
		}
		return events;
	}

}
