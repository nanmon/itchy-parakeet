package com.hoohaa.hoohaalauncher;

import java.text.AttributedCharacterIterator.Attribute;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Rect;
import android.os.Vibrator;
import android.util.AttributeSet;

public class AppItem extends Item{
	
	private String packageName;
	private Bitmap icon;
	private String text;
	
	final float dp, sp;
	int iconSize, iconPadding;
	int textWidth, textHeight, textX, textY;
	Rect iconRect = new Rect(), textRect = new Rect();
	Paint iconPaint = new Paint(), textPaint = new Paint();

	
	public AppItem(Context context, AttributeSet attrs, int defStyleAttr) {
		super(context, attrs, defStyleAttr);
		dp = context.getResources().getDisplayMetrics().density;
		sp = context.getResources().getDisplayMetrics().scaledDensity;
		init(context, (String)getTag());
	}

	public AppItem(Context context, AttributeSet attrs) {
		super(context, attrs);
		dp = context.getResources().getDisplayMetrics().density;
		sp = context.getResources().getDisplayMetrics().scaledDensity;
		init(context, (String)getTag());
	}

	public AppItem(Context context, String packageName) {
		super(context);
		dp = context.getResources().getDisplayMetrics().density;
		sp = context.getResources().getDisplayMetrics().scaledDensity;
		init(context, packageName);
	}
	
	
	private void init(Context context, String packageName){
		this.packageName = packageName;
		PackMan.Pack pack = PackMan.get(packageName);
		icon = Tools.drawableToBitmap(pack.mIcon);
		text = pack.mName;
		
		iconSize = (int)(65 * dp);
		iconPadding = (int)(3 * dp);
		textWidth = (int)(65 * dp);
		textHeight = (int)(40 * dp);
		textX = 0;
		textY = (int)(71 * dp); //65 + 3 + 3
		
		iconPaint.setAntiAlias(true);
		iconPaint.setDither(true);
		
		textPaint.setTextSize(12 * sp);
		textPaint.setColor(Color.WHITE);
		textPaint.setAntiAlias(true);
		textPaint.setTextAlign(Paint.Align.CENTER);
		textPaint.setShadowLayer(2, 0, 0, Color.BLACK);
		
	}
	
	@Override
	protected void onSizeChanged(int w, int h, int oldw, int oldh) {
		super.onSizeChanged(w, h, oldw, oldh);
		int xIni = getPaddingLeft();
		int yIni = getPaddingTop();
		int ancho = getWidth() - getPaddingRight() - xIni;
		iconRect.set(xIni + iconPadding, yIni + iconPadding, 
				xIni + ancho - iconPadding, yIni + ancho - iconPadding);
		//int alto = getHeight() - getPaddingBottom() - yIni;
		textX = (getWidth())/2;
		textY = yIni + ancho + (int)(6 * sp) + iconPadding;
	}
	
	@Override
	protected void onDraw(Canvas canvas) {
		super.onDraw(canvas);
		canvas.drawBitmap(icon, null, iconRect, iconPaint);
		int iBreak = textPaint.breakText(text, true, getWidth(), null);
		if(iBreak < text.length()){
			canvas.drawText(text.substring(0, iBreak), textX, textY, textPaint);
			canvas.drawText(text.substring(iBreak), textX, textY + textPaint.getTextSize(), textPaint);
		}else
			canvas.drawText(text, textX, textY, textPaint);
	}
	
	@Override
	protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
		//aspect_ratio = 13:21
		int width = -1, height = -1;
		if(MeasureSpec.getMode(widthMeasureSpec) != MeasureSpec.UNSPECIFIED){
			width = (int)(MeasureSpec.getSize(widthMeasureSpec));
		}if(MeasureSpec.getMode(heightMeasureSpec) != MeasureSpec.UNSPECIFIED){
			height = (int)(MeasureSpec.getSize(heightMeasureSpec));
		}
		if(width == -1 && height == -1){
			width = (int)(65 * dp);
			height = (int)(105 * dp);
		}else if(width == -1){
			width = height*13/21;
		}else if(height == -1){
			height = width*21/13;
		}else{
			if(width*21/13 > height*13/21)
				width = height*13/21;
			else height = width*21/13;
		}
		
		setMeasuredDimension(width, height);
	}

	@Override
	public void onClick() {
		((Vibrator)getContext().getSystemService(Context.VIBRATOR_SERVICE)).vibrate(20);
		PackMan.startActivity(getContext(), packageName);
	}
	
	@Override
	public boolean onLongClick() {
		// TODO Auto-generated method stub
		return false;
	}
	
	public void setApp(String activityName){
		this.packageName = activityName;
		PackMan.Pack pack = PackMan.get(activityName);
		icon = Tools.drawableToBitmap(pack.mIcon);
		text = pack.mName;
	}
	
	public String getApp(){
		return packageName;
	}
	
}
